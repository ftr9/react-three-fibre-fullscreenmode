/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 final.glb
*/

import React, { useEffect, useMemo } from 'react';
import { useGLTF, useTexture } from '@react-three/drei';
import * as THREE from 'three';

export function Model(props) {
  const { nodes, materials } = useGLTF('/final.glb');
  const texture = useTexture('/finalbaked.jpg');
  const bakedMaterial = useMemo(() => {
    texture.flipY = false;
    const basicMaterial = new THREE.MeshBasicMaterial({ map: texture });
    return basicMaterial;
  }, []);

  const modelSizeByWindowSize = () => {
    if (window.innerWidth <= 360) {
      return [0.8, 0.8, 0.8];
    }
    return [1, 1, 1];
  };

  return (
    <group scale={modelSizeByWindowSize()} {...props} dispose={null}>
      <mesh geometry={nodes.Cube.geometry} material={bakedMaterial} />
      <mesh
        geometry={nodes.Torus.geometry}
        material={bakedMaterial}
        position={[0, 0.38, 0]}
      />
    </group>
  );
}

useGLTF.preload('/final.glb');
